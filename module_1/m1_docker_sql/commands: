################################################################################################
# Setup local postgres container
################################################################################################  

docker run -it \
    -e POSTGRES_USER="root" \
    -e POSTGRES_PASSWORD="root" \
    -e POSTGRES_DB="ny_taxi" \
    -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
    -p 5432:5432 \
    postgres:13

################################################################################################
# Use pgcli to access postgres database via local shell
################################################################################################  

pgcli -h localhost -p 5410 -u root -d ny_taxi
    
################################################################################################
# Run pgAdmin container - More user friendly than cli, but can't access postgres container (yet) 
################################################################################################ 

docker run -it \
    -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
    -e PGADMIN_DEFAULT_PASSWORD="root" \
    -p 8080:80 \
    dpage/pgadmin4

################################################################################################
# Run pgAdmin and postgres containers in docker network so they can communicate
################################################################################################    
    
#1) create docker network
docker network create pg-network 

#2) Run postgres container in docker network  
docker run -it \
    -e POSTGRES_USER="root" \
    -e POSTGRES_PASSWORD="root" \
    -e POSTGRES_DB="ny_taxi" \
    -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
    -p 5432:5432 \
    --network=pg-network \
    --name pg-database \
    postgres:13

#3) Run pgAdmin container in docker network
docker run -it \
    -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
    -e PGADMIN_DEFAULT_PASSWORD="root" \
    -p 8080:80 \
    --network=pg-network \
    --name pgadmin \
    dpage/pgadmin4

################################################################################################
# Test python ingestion script (not using default local port)
################################################################################################   

URL='https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet'

python ingest_data.py \
    --user=root \
    --password=root \
    --host=localhost \
    --port=5432 \
    --db=ny_taxi \
    --table_name=yellow_taxi_trips \
    --url='https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet'

################################################################################################
# Build container with ingestion script to run on docker network
################################################################################################   

#1) Build container

docker build -t taxi_ingest:v001 .

#2) Run container built with modified docker file 

url='https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet' /

docker run -it \
    --network=pg-network \
    taxi_ingest:v001 \
    --user=root \
    --password=root \
    --host=pg-database \
    --port=5432 \
    --db=ny_taxi \
    --table_name=yellow_taxi_trips \
    --url='https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet'


################################################################################################
# USEFUL COMMANDS
################################################################################################  
    # BASH inspect files (useful for inspecting large tables in commandline)
        #Show head of file
        head -n 100 
        #Show lines in a file
        wc -l
        # Show terminal history
        history
    # Docker
        # Show containers
        docker ps
        # docker compose
        docker compose up
        